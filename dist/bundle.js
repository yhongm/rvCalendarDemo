!function(e){var t={};function r(n){if(t[n])return t[n].exports;var i=t[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,r),i.l=!0,i.exports}r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)r.d(n,i,function(t){return e[t]}.bind(null,i));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=0)}([function(e,t,r){"use strict";var n,i=r(1),o=(n=i)&&n.__esModule?n:{default:n};var a=void 0;window.clickDiv=function(){a.data.parent="click Div time:"+new Date/1e3},window.clickP1=function(){a.data.child="click p1 time:"+new Date/1e3},window.clickP2=function(){a.data.child2="click p2 time:"+new Date/1e3},window.onload=function(){(a=new o.default({el:"#app",data:{parent:"parent",child:"child",pcolor:"red",c1color:"blue",c2color:"green",child2:"child2"},dom:{tag:"div",props:{key:"1",style:"color:%#pcolor#%,width:100px,height:100px",onclick:"clickDiv()"},children:["%#parent#%",{tag:"p",props:{key:"2",style:"color:%#c1color#%,width:50px,height:50px",onclick:"clickP1()"},children:["%#child#%"]},{tag:"p",props:{key:"3",style:"color:%#c2color#%,width:50px,height:50px",onclick:"clickP2()"},children:["%#child2#%"]}]}})).watch("parent",function(){alert("parent,change")}),a.watch("child",function(){alert("child,change")}),a.watch("child2",function(){alert("child2,change")})}},function(e,t){!function(e){var t={};function r(n){if(t[n])return t[n].exports;var i=t[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,r),i.l=!0,i.exports}r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)r.d(n,i,function(t){return e[t]}.bind(null,i));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=0)}([function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}();function i(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var o=function(){function e(t,r,n){if(i(this,e),!(this instanceof e))return new e(tagName,r,n);if(this.tag=t,this.props=r||{},this.children=n||[],this.key=r?r.key:void 0,!this.key)throw new Error(t+" ... the key is undefined");var o=0;this.children.forEach(function(t){t instanceof e&&(o+=t.count),o++}),this.count=o}return n(e,[{key:"render",value:function(){var t=document.createElement(this.tag),r=this.props;for(var n in r)s.setAttr(t,n,r[n]);return this.children.forEach(function(r){var n=r instanceof e?r.render():document.createTextNode(r);t.appendChild(n)}),t}}]),e}(),a=function(){function e(t,r){i(this,e),this.index=0,this.patches={},this.dfsWalk(t,r,this.index)}return n(e,[{key:"dfsWalk",value:function(e,t,r){var n=[];if(null==t);else if(s.isString(e)&&s.isString(t))e!=t&&n.push({type:3,content:t});else if(e.tagName===t.tagName&&e.key==t.key){var i=this.diffProps(e,t);i&&n.push({type:2,props:i}),s.isIgnoreChildren(t)||this.diffChildren(e.children,t.children,r,n)}else n.push({type:0,node:t});n.length&&(this.patches[r]=n)}},{key:"diffProps",value:function(e,t){var r=e.props,n=t.props,i={},o=!0;for(var a in r)n[a]!==r[a]&&(o=!1,i[a]=n[a]);for(var l in n)r.hasOwnProperty(l)||(o=!1,i[l]=n[l]);return o?null:i}},{key:"diffChildren",value:function(e,t,r,n){var i=this,o=new c(e,t).getResult();if(t=o.child,o.moves.length){var a={type:1,moves:o.moves};n.push(a)}var l=null,s=r;e.forEach(function(e,r){var n=t[r];s=l&&l.count?s+l.count+1:s+1,i.dfsWalk(e,n,s),l=e})}}]),e}(),l=function(){function e(t,r){i(this,e),this.dfsWalk(t,{index:0},r)}return n(e,[{key:"dfsWalk",value:function(e,t,r){for(var n=r[t.index],i=e.childNodes?e.childNodes.length:0,o=0;o<i;o++){var a=e.childNodes[o];t.index++,this.dfsWalk(a,t,r)}n&&this.applyPatches(e,n)}},{key:"applyPatches",value:function(e,t){var r=this;t.forEach(function(t){switch(t.type){case 0:var n=s.isString(t.node)?document.createTextNode(t.node):t.node.render();e.parentNode.replaceChild(n,e);break;case 1:r.reorderChildren(e,t.moves);break;case 2:r.setProps(e,t.props);break;case 3:e.textContent?e.textContent=t.content:e.nodeValue=t.content}})}},{key:"reorderChildren",value:function(e,t){var r=s.toArray(e.childNodes),n={};r.forEach(function(e){if(1===e.nodeType){var t=e.getAttribute("key");t&&(n[t]=e)}}),t.forEach(function(t){var i=t.index;if(0===t.type)r[i]===e.childNodes[i]&&e.removeChild(e.childNodes[i]),r.splice(i,1);else if(1===t.type){var o=n[t.item.key]?n(t.item.key).cloneNode(!0):s.isString(t.item)?document.createTextNode(t.item):t.item.render();r.splice(i,0,o),e.insertBefore(o,e.childNodes[i]||null)}})}},{key:"setProps",value:function(e,t){for(var r in t)if(void 0===t[r])e.removeAttribute(r);else{var n=t[r];s.setAttr(e,r,n)}}}]),e}(),s=function(){function e(){i(this,e)}return n(e,null,[{key:"isString",value:function(e){return"string"==typeof e}},{key:"toArray",value:function(e){if(!e)return[];for(var t=[],r=0;r<e.length;r++)t.push(e[r]);return t}},{key:"isForIn",value:function(e){return/^\w* _in_ \w*$/.test(e)}},{key:"isForForIn",value:function(e){return/^\w* _in*$/.test(e)}},{key:"isForOrForFor",value:function(e){return/^\w* _in_ \w|_in*$/.test(e)}},{key:"isIgnoreChildren",value:function(e){return e.props&&e.props.hasOwnProperty("ignore")}},{key:"setAttr",value:function(e,t,r){switch(t){case"style":e.style.cssText=r;break;case"value":var n=e.tagName||"";"input"===(n=n.toLowerCase())||"textarea"===n?e.value=r:e.setAttribute(t,r);break;default:e.setAttribute(t,r)}}}]),e}(),c=function(){function e(t,r){i(this,e);var n=this.makeKeyIndex(t).keyIndex,o=this.makeKeyIndex(r).keyIndex;this.moveOperator=[],this.childList=[];for(var a=0;a<t.length;a++){var l=t[a],s=this.getKey(l);o.hasOwnProperty(s)?this.childList.push(r[o[s]]):this.childList.push(null)}this.tempList=this.childList.slice(0);for(var c=0;c<this.tempList.length;)null===this.tempList[c]?(this.remove(c),this.removeCopyTempList(c)):c++;for(var u=0,p=0;p<r.length;p++){var h=r[p],d=this.getKey(h),f=this.tempList[u],v=this.getKey(f);f?d!=v?n.hasOwnProperty(d)&&d===getKey(this.tempList[u+1])?(this.remove(p),this.removeCopyTempList(u),u++):this.insert(p,h):u++:this.insert(p,h)}for(var y=this.tempList.length-u;u++<this.tempList.length;)y--,this.remove(y+r.length)}return n(e,[{key:"makeKeyIndex",value:function(e){for(var t={},r=0;r<e.length;r++){var n=e[r];t[this.getKey(n)]=r}return{keyIndex:t}}},{key:"getKey",value:function(e){if(e)return e.key}},{key:"removeCopyTempList",value:function(e){this.tempList.splice(e,1)}},{key:"remove",value:function(e){this.moveOperator.push({index:e,type:0})}},{key:"insert",value:function(e,t){this.moveOperator.push({index:e,item:t,type:1})}},{key:"getResult",value:function(){return{moves:this.moveOperator,child:this.childList}}}]),e}();function u(){this.updateFunctions=new Set}u.prototype.add=function(e){this.updateFunctions.add(e)},u.prototype.invoke=function(){this.updateFunctions.forEach(function(e){return e()})};var p=function(){function e(){i(this,e),this.length=0,this.map=new Object}return n(e,[{key:"put",value:function(e,t){e in this.map||this.length++,this.map[e]=t}},{key:"get",value:function(e){return e in this.map?this.map[e]:null}},{key:"remove",value:function(e){e in this.map&&(delete this.map[e],this.length--)}},{key:"size",value:function(){return this.length}},{key:"clear",value:function(){length=0,this.map=new Object}}]),e}(),h=function(){function e(t){var r=this;i(this,e);var n,o,a,l=t.el,c=t.data,h=t.dom,d=s.isString(l)?document.querySelector(l):l;this.data=c,this.ve=this.getVirtualElement(this.applyTruthfulData(h)),this.w=this.ve.render(),d.appendChild(this.w),this.observeMap=new p,n=this.data,o=this.observeMap,a=function(){r.updatedom(h)},Object.keys(n).forEach(function(e){var t=n[e],r=new u;o.put(e,r),Object.defineProperty(n,e,{get:function(){return r.add(a),t},set:function(e){var n=t!==e;t=e,n&&r.invoke()}})}),this.updatedom(h)}return n(e,[{key:"updatedom",value:function(e){var t,r,n,i=this.getVirtualElement(this.applyTruthfulData(e));window.nve=i,window.ve=this.ve,t=this.w,n=this.ve,r=new a(n,i).patches,new l(t,r),this.ve=i}},{key:"watch",value:function(e,t){this.observeMap.get(e).add(t)}},{key:"getVirtualElement",value:function(e){var t=this,r=[];for(var n in e.children){var i=e.children[n];if(i instanceof Array)i.forEach(function(e){var n=t.getVirtualElement(e);r.push(n)});else if(i instanceof Object){var a=this.getVirtualElement(i);r.push(a)}else r.push(i)}return function(e,t,r){return new o(e,t,r)}(e.tag,e.props,r)}},{key:"applyTruthfulData",value:function(t){var r=this;if("for"in t.props||"for_for"in t.props){var n=[],i=!1,o=void 0;if(t.props.for){if(s.isForOrForFor(t.props.for))if(t.forData){if(s.isForIn(t.props.for))throw new Error("plase use _in direction");n=t.forData,o=t.props.for.split(" _in")[0]}else{if(s.isForForIn(t.props.for))throw new Error("plase use _in_ direction");n=this.data[t.props.for.split(" _in_ ")[1]],o=t.props.for.split(" _in_ ")[0]}}else{if(!t.props.for_for)throw new Error("the for direction use error");if(s.isForOrForFor(t.props.for_for)){if(s.isForForIn(t.props.for_for))throw new Error("plase use _in_ direction");i=!0,n=this.data[t.props.for_for.split(" _in_ ")[1]],o=t.props.for_for.split(" _in_ ")[0]}}var a=[];return n.forEach(function(n){var l={};for(var c in l.tag=t.tag,l.children=[],l.props={},t.children)s.isString(t.children[c])?e.isPlaceHolder(t.children[c])?-1==e.getPlaceHolderValue(t.children[c]).indexOf(o)?l.children[c]=r.data[e.getPlaceHolderValue(t.children[c])]:l.children[c]=n[e.getPlaceHolderValue(t.children[c]).split(".")[1]]:l.children[c]=t.children[c]:(i&&(t.children[c].forData=n),l.children[c]=r.applyTruthfulData(t.children[c]));var u=Object.keys(t.props);for(var p in u){var h=u[p];if("style"===h){var d=t.props[h];if(d.indexOf(",")>-1){var f=d.split(",");l.props[h]=r.handleArrayStyle(n,f,o)}else l.props[h]=r.handleSingleStyle(n,d,o)}else e.isPlaceHolder(t.props[h])?-1==e.getPlaceHolderValue(t.props[h]).indexOf(o)?l.props[h]=r.data[e.getPlaceHolderValue(t.props[h])]:l.props[h]=n[e.getPlaceHolderValue(t.props[h]).split(".")[1]]:l.props[h]=t.props[h]}a.push(l)}),a}var l={};for(var c in l.tag=t.tag,l.children=[],l.props={},t.children)s.isString(t.children[c])?e.isPlaceHolder(t.children[c])?l.children[c]=this.data[e.getPlaceHolderValue(t.children[c])]:l.children[c]=t.children[c]:l.children[c]=this.applyTruthfulData(t.children[c]);var u=Object.keys(t.props);for(var p in u){var h=u[p];if("style"===h){var d=t.props[h];if(d.indexOf(",")>-1){var f=d.split(",");l.props[h]=this.handleArrayStyle(this.data,f,void 0)}else l.props[h]=this.handleSingleStyle(this.data,d,void 0)}else e.isPlaceHolder(t.props[h])?l.props[h]=this.data[e.getPlaceHolderValue(t.props[h])]:l.props[h]=t.props[h]}return l}},{key:"handleSingleStyle",value:function(t,r,n){var i="";if(n)if(e.isPlaceHolder(r))if(-1!=e.getPlaceHolderValue(r).indexOf(n))i=t[e.getPlaceHolderValue(r).split(".")[1]];else{var o=r.split(":")[0],a=r.split(":")[1];i=o+":"+(a=t[e.getPlaceHolderValue(a)])}else i=r;else{var l=r.split(":")[0],s=r.split(":")[1];i=e.isPlaceHolder(s)?l+":"+(s=t[e.getPlaceHolderValue(s)]):r}return i}},{key:"handleArrayStyle",value:function(e,t,r){var n="",i=!0,o=!1,a=void 0;try{for(var l,s=t[Symbol.iterator]();!(i=(l=s.next()).done);i=!0){var c=l.value;n+=this.handleSingleStyle(e,c,r)+";"}}catch(e){o=!0,a=e}finally{try{!i&&s.return&&s.return()}finally{if(o)throw a}}return n}}],[{key:"isPlaceHolder",value:function(e){return!!e&&!(!e.startsWith("%#")||!e.endsWith("#%"))}},{key:"getPlaceHolderValue",value:function(e){return e.slice(2,-2)}}]),e}();t.default=h}])}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,